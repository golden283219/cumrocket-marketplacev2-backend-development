server {
    listen [::]:80;
    listen 80;

    server_name api.cumrocket.io;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        allow all
        root /var/www/certbot;
    }
}
server {
    listen 443 ssl;
    server_name api.cumrocket.io;

    ssl_certificate /etc/letsencrypt/live/api.cumrocket.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.cumrocket.io/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    set $cors '';
    if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
            set $cors 'true';
    }

    if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            # required to be able to read Authorization header in frontend
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
    }

    if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
    }


    location / {
        proxy_pass http://api.cumrocket.io;

        if ($http_origin ~* "^https?://(cumrocket.io|api.cumrocket.io)$") {
            add_header Access-Control-Allow-Origin "$http_origin";
        }
    }
}